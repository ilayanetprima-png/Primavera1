from flask import Flask, jsonify, request

app = Flask(_name_)

# Lista inicial de productos
productos = [
    {"id": 1, "nombre": "Laptop", "precio": 5500},
    {"id": 2, "nombre": "Mouse", "precio": 150},
    {"id": 3, "nombre": "Teclado", "precio": 250}
]

@app.route("/", methods=["GET"])
def index():
    return "Bienvenido al sistema de productos."

@app.route("/acerca", methods=["GET"])
def acerca():
    return jsonify({
        "aplicacion": "Gesti√≥n de Productos",
        "version": 1.0,
        "autor": "LINETTE PRIMAVERA ILAYA "
    })

@app.route("/productos", methods=["GET"])
def obtener_productos():
    return jsonify(productos)

@app.route("/productos/<int:producto_id>", methods=["GET"])
def obtener_producto(producto_id):
    producto = next((p for p in productos if p["id"] == producto_id), None)
    if producto:
        return jsonify(producto)
    return jsonify({"error": "Producto no encontrado"}), 404

@app.route("/productos", methods=["POST"])
def crear_producto():
    if not request.is_json:
        return jsonify({"error": "Se requiere JSON"}), 400

    data = request.get_json()
    nombre = data.get("nombre")
    precio = data.get("precio")

    if nombre is None or precio is None:
        return jsonify({"error": "Faltan campos 'nombre' o 'precio'"}), 400

    nuevo_id = max((p["id"] for p in productos), default=0) + 1
    nuevo_producto = {"id": nuevo_id, "nombre": nombre, "precio": precio}
    productos.append(nuevo_producto)

    return jsonify({
        "mensaje": "Producto agregado correctamente",
        "producto": nuevo_producto
    }), 201

@app.route("/productos/<int:producto_id>", methods=["DELETE"])
def eliminar_producto(producto_id):
    index = next((i for i, p in enumerate(productos) if p["id"] == producto_id), None)
    if index is None:
        return jsonify({"error": "Producto no encontrado"}), 404

    productos.pop(index)
    return jsonify({"mensaje": "Producto eliminado correctamente"}), 200

if _name_ == "_main_":
    app.run(debug=True)
